syntax = "proto3";

option go_package = "./pb";

package pb;

import "google/api/annotations.proto";

// info(
// 	title: "用户中心服务"
// 	desc: "用户中心服务"
// 	author: "liwm29"
// 	email: "liwm29@mail2.sysu.edu.com"
// 	version: "v1"
// )

message RegisterUserReq {
  int64 phone = 1;
  string nickname = 2;
  string avatar = 3;
  int32 sex = 4;
  int32 age = 5;
  string address = 6;
  string publicKey = 7;
  string password = 8;
  string sms_code = 9;
};

message RegisterUserResp {
  uint64 user_id = 1;
  string access_token = 2;
  int64 access_expire = 3;
  int64 refresh_after = 4;
};

message LoginUserReq {
  int32 phone = 1;
  string login_type = 2;
  string password = 3;
  string sms_code = 4;
}

message LoginUserResp {
  uint64 user_id = 1;
  string access_token = 2;
  int64 access_expire = 3;
  int64 refresh_after = 4;
}

message FollowReq { uint64 to = 2; }
message FollowResp {}

message UnfollowReq { uint64 to = 2; }
message UnfollowResp {}

message MakeGroupReq {
  string avatar = 2;
  string name = 3;
  repeated uint64 invited_uids = 4;
}
message MakeGroupResp { uint64 group_id = 1; }

message JoinGroupReq { uint64 group_id = 2; }
message JoinGroupResp {}

message LeaveGroupReq { uint64 group_id = 2; }
message LeaveGroupResp {}

message UserInfo {
  uint64 user_id = 1;
  string nickname = 2;
  int32 sex = 3;
  int32 age = 4;
  string avater = 5;
  string address = 6;
  string public_key = 7;
}

message GroupInfo {
  uint64 group_id = 1;
  string avatar = 2;
  string name = 3;
  repeated UserInfo members = 4;
}

message GetUserInfoReq { uint64 user_id = 1; }
message GetUserInfoResp { UserInfo user_info = 1; }

// todo: 实现level字段，根据请求的level字段返回不同程度的信息，比如level=0，只返回uid，level=2，只返回群组信息，level=3返回成员信息等等
message GetGroupInfoReq { uint64 group_id = 1; }
message GetGroupInfoResp { GroupInfo group_info = 1; }

message GetGroupMemberUidReq { uint64 group_id = 1; }
message GetGroupMemberUidResp { repeated uint64 uid_list = 1; }

message GetMyFriendsReq {}
message GetMyFriendsResp { repeated UserInfo friends_list = 1; }

message GetMyFollowsReq {}
message GetMyFollowsResp { repeated UserInfo follows_list = 1; }

message GetMyFansReq {}
message GetMyFansResp { repeated UserInfo fans_list = 1; }

message GetMyFansUidReq {}
message GetMyFansUidResp { repeated uint64 fans_uid_list = 1; }

message GetMyGroupsReq {}
message GetMyGroupsResp { repeated GroupInfo groups_list = 1; }

service UserCenter {
  rpc RegisterUser(RegisterUserReq) returns (RegisterUserResp) {
    option (google.api.http) = {
      post : "/api/v1/user"
      body : "*"
    };
  }

  rpc LoginUser(LoginUserReq) returns (LoginUserResp) {
    option (google.api.http) = {
      post : "/api/v1/login"
      body : "*"
    };
  }

  rpc Follow(FollowReq) returns (FollowResp) {
    option (google.api.http) = {
      post : "/api/v1/user/follow"
      body : "*"
    };
  }

  rpc Unfollow(UnfollowReq) returns (UnfollowResp) {
    option (google.api.http) = {
      post : "/api/v1/user/unfollow"
      body : "*"
    };
  }

  rpc MakeGroup(MakeGroupReq) returns (MakeGroupResp) {
    option (google.api.http) = {
      post : "/api/v1/group"
      body : "*"
    };
  }

  rpc JoinGroup(JoinGroupReq) returns (JoinGroupResp) {
    option (google.api.http) = {
      post : "/api/v1/group/join"
      body : "*"
    };
  }

  rpc LeaveGroup(LeaveGroupReq) returns (LeaveGroupResp) {
    option (google.api.http) = {
      post : "/api/v1/group/leave"
      body : "*"
    };
  }

  rpc GetUserInfo(GetUserInfoReq) returns (GetUserInfoResp) {
    option (google.api.http) = {
      get : "/api/v1/user"
    };
  }

  rpc GetGroupInfo(GetGroupInfoReq) returns (GetGroupInfoResp) {
    option (google.api.http) = {
      get : "/api/v1/group"
    };
  }

  rpc GetGroupMemberUid(GetGroupMemberUidReq) returns (GetGroupMemberUidResp);

  rpc GetMyFriends(GetMyFriendsReq) returns (GetMyFriendsResp) {
    option (google.api.http) = {
      get : "/api/v1/user/friends"
    };
  }

  rpc GetMyFollows(GetMyFollowsReq) returns (GetMyFollowsResp) {
    option (google.api.http) = {
      get : "/api/v1/user/follows"
    };
  }

  rpc GetMyFans(GetMyFansReq) returns (GetMyFansResp) {
    option (google.api.http) = {
      get : "/api/v1/user/fans"
    };
  }

  rpc GetMyFansUid(GetMyFansUidReq) returns (GetMyFansUidResp);

  rpc GetMyGroups(GetMyGroupsReq) returns (GetMyGroupsResp) {
    option (google.api.http) = {
      post : "/api/v1/user/groups"
    };
  }
}
