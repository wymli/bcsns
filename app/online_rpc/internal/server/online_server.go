// Code generated by goctl. DO NOT EDIT!
// Source: online.proto

package server

import (
	"context"

	"github.com/wymli/bcsns/app/online_rpc/internal/logic"
	"github.com/wymli/bcsns/app/online_rpc/internal/svc"
	"github.com/wymli/bcsns/app/online_rpc/pb"
)

type OnlineServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOnlineServer
}

func NewOnlineServer(svcCtx *svc.ServiceContext) *OnlineServer {
	return &OnlineServer{
		svcCtx: svcCtx,
	}
}

func (s *OnlineServer) OnlineUser(ctx context.Context, in *pb.OnlineUserReq) (*pb.OnlineUserResp, error) {
	l := logic.NewOnlineUserLogic(ctx, s.svcCtx)
	return l.OnlineUser(in)
}

func (s *OnlineServer) BatchOnlineUser(ctx context.Context, in *pb.BatchOnlineUserReq) (*pb.BatchOnlineUserResp, error) {
	l := logic.NewBatchOnlineUserLogic(ctx, s.svcCtx)
	return l.BatchOnlineUser(in)
}

func (s *OnlineServer) OfflineUser(ctx context.Context, in *pb.OfflineUserReq) (*pb.OfflineUserResp, error) {
	l := logic.NewOfflineUserLogic(ctx, s.svcCtx)
	return l.OfflineUser(in)
}

func (s *OnlineServer) BatchOfflineUser(ctx context.Context, in *pb.BatchOfflineUserReq) (*pb.BatchOfflineUserResp, error) {
	l := logic.NewBatchOfflineUserLogic(ctx, s.svcCtx)
	return l.BatchOfflineUser(in)
}

func (s *OnlineServer) KeepAliveUser(ctx context.Context, in *pb.KeepAliveUserReq) (*pb.KeepAliveUserResp, error) {
	l := logic.NewKeepAliveUserLogic(ctx, s.svcCtx)
	return l.KeepAliveUser(in)
}

//  is not online
func (s *OnlineServer) BatchKeepAliveUser(ctx context.Context, in *pb.BatchKeepAliveUserReq) (*pb.BatchKeepAliveUserResp, error) {
	l := logic.NewBatchKeepAliveUserLogic(ctx, s.svcCtx)
	return l.BatchKeepAliveUser(in)
}

func (s *OnlineServer) GetUserGateway(ctx context.Context, in *pb.GetUserGatewayReq) (*pb.GetUserGatewayResp, error) {
	l := logic.NewGetUserGatewayLogic(ctx, s.svcCtx)
	return l.GetUserGateway(in)
}

func (s *OnlineServer) BatchGetUserGateway(ctx context.Context, in *pb.BatchGetUserGatewayReq) (*pb.BatchGetUserGatewayResp, error) {
	l := logic.NewBatchGetUserGatewayLogic(ctx, s.svcCtx)
	return l.BatchGetUserGateway(in)
}

func (s *OnlineServer) GetAllOnlineUser(ctx context.Context, in *pb.GetAllOnlineUserReq) (*pb.GetAllOnlineUserResp, error) {
	l := logic.NewGetAllOnlineUserLogic(ctx, s.svcCtx)
	return l.GetAllOnlineUser(in)
}
