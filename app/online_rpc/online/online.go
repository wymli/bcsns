// Code generated by goctl. DO NOT EDIT!
// Source: online.proto

package online

import (
	"context"

	"github.com/wymli/bcsns/app/online_rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchGetUserGatewayReq  = pb.BatchGetUserGatewayReq
	BatchGetUserGatewayResp = pb.BatchGetUserGatewayResp
	BatchKeepAliveUserReq   = pb.BatchKeepAliveUserReq
	BatchKeepAliveUserResp  = pb.BatchKeepAliveUserResp
	BatchOfflineUserReq     = pb.BatchOfflineUserReq
	BatchOfflineUserResp    = pb.BatchOfflineUserResp
	BatchOnlineUserReq      = pb.BatchOnlineUserReq
	BatchOnlineUserResp     = pb.BatchOnlineUserResp
	GetAllOnlineUserReq     = pb.GetAllOnlineUserReq
	GetAllOnlineUserResp    = pb.GetAllOnlineUserResp
	GetUserGatewayReq       = pb.GetUserGatewayReq
	GetUserGatewayResp      = pb.GetUserGatewayResp
	KeepAliveUserReq        = pb.KeepAliveUserReq
	KeepAliveUserResp       = pb.KeepAliveUserResp
	OfflineUserReq          = pb.OfflineUserReq
	OfflineUserResp         = pb.OfflineUserResp
	OnlineUserReq           = pb.OnlineUserReq
	OnlineUserResp          = pb.OnlineUserResp

	Online interface {
		OnlineUser(ctx context.Context, in *OnlineUserReq, opts ...grpc.CallOption) (*OnlineUserResp, error)
		BatchOnlineUser(ctx context.Context, in *BatchOnlineUserReq, opts ...grpc.CallOption) (*BatchOnlineUserResp, error)
		OfflineUser(ctx context.Context, in *OfflineUserReq, opts ...grpc.CallOption) (*OfflineUserResp, error)
		BatchOfflineUser(ctx context.Context, in *BatchOfflineUserReq, opts ...grpc.CallOption) (*BatchOfflineUserResp, error)
		KeepAliveUser(ctx context.Context, in *KeepAliveUserReq, opts ...grpc.CallOption) (*KeepAliveUserResp, error)
		//  is not online
		BatchKeepAliveUser(ctx context.Context, in *BatchKeepAliveUserReq, opts ...grpc.CallOption) (*BatchKeepAliveUserResp, error)
		GetUserGateway(ctx context.Context, in *GetUserGatewayReq, opts ...grpc.CallOption) (*GetUserGatewayResp, error)
		BatchGetUserGateway(ctx context.Context, in *BatchGetUserGatewayReq, opts ...grpc.CallOption) (*BatchGetUserGatewayResp, error)
		GetAllOnlineUser(ctx context.Context, in *GetAllOnlineUserReq, opts ...grpc.CallOption) (*GetAllOnlineUserResp, error)
	}

	defaultOnline struct {
		cli zrpc.Client
	}
)

func NewOnline(cli zrpc.Client) Online {
	return &defaultOnline{
		cli: cli,
	}
}

func (m *defaultOnline) OnlineUser(ctx context.Context, in *OnlineUserReq, opts ...grpc.CallOption) (*OnlineUserResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.OnlineUser(ctx, in, opts...)
}

func (m *defaultOnline) BatchOnlineUser(ctx context.Context, in *BatchOnlineUserReq, opts ...grpc.CallOption) (*BatchOnlineUserResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.BatchOnlineUser(ctx, in, opts...)
}

func (m *defaultOnline) OfflineUser(ctx context.Context, in *OfflineUserReq, opts ...grpc.CallOption) (*OfflineUserResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.OfflineUser(ctx, in, opts...)
}

func (m *defaultOnline) BatchOfflineUser(ctx context.Context, in *BatchOfflineUserReq, opts ...grpc.CallOption) (*BatchOfflineUserResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.BatchOfflineUser(ctx, in, opts...)
}

func (m *defaultOnline) KeepAliveUser(ctx context.Context, in *KeepAliveUserReq, opts ...grpc.CallOption) (*KeepAliveUserResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.KeepAliveUser(ctx, in, opts...)
}

//  is not online
func (m *defaultOnline) BatchKeepAliveUser(ctx context.Context, in *BatchKeepAliveUserReq, opts ...grpc.CallOption) (*BatchKeepAliveUserResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.BatchKeepAliveUser(ctx, in, opts...)
}

func (m *defaultOnline) GetUserGateway(ctx context.Context, in *GetUserGatewayReq, opts ...grpc.CallOption) (*GetUserGatewayResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.GetUserGateway(ctx, in, opts...)
}

func (m *defaultOnline) BatchGetUserGateway(ctx context.Context, in *BatchGetUserGatewayReq, opts ...grpc.CallOption) (*BatchGetUserGatewayResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.BatchGetUserGateway(ctx, in, opts...)
}

func (m *defaultOnline) GetAllOnlineUser(ctx context.Context, in *GetAllOnlineUserReq, opts ...grpc.CallOption) (*GetAllOnlineUserResp, error) {
	client := pb.NewOnlineClient(m.cli.Conn())
	return client.GetAllOnlineUser(ctx, in, opts...)
}
