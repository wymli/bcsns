// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package server

import (
	"context"

	"github.com/wymli/bcsns/app/message_rpc/internal/logic"
	"github.com/wymli/bcsns/app/message_rpc/internal/svc"
	"github.com/wymli/bcsns/app/message_rpc/pb"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMessageServer
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) SendUserMsg(ctx context.Context, in *pb.SendUserMsgReq) (*pb.SendUserMsgResp, error) {
	l := logic.NewSendUserMsgLogic(ctx, s.svcCtx)
	return l.SendUserMsg(in)
}

func (s *MessageServer) SendRoomMsg(ctx context.Context, in *pb.SendRoomMsgReq) (*pb.SendRoomMsgResp, error) {
	l := logic.NewSendRoomMsgLogic(ctx, s.svcCtx)
	return l.SendRoomMsg(in)
}

func (s *MessageServer) PostMoments(ctx context.Context, in *pb.PostMomentsReq) (*pb.PostMomentsResp, error) {
	l := logic.NewPostMomentsLogic(ctx, s.svcCtx)
	return l.PostMoments(in)
}
