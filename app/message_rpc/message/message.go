// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package message

import (
	"context"

	"github.com/wymli/bcsns/app/message_rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PostMomentsReq  = pb.PostMomentsReq
	PostMomentsResp = pb.PostMomentsResp
	SendRoomMsgReq  = pb.SendRoomMsgReq
	SendRoomMsgResp = pb.SendRoomMsgResp
	SendUserMsgReq  = pb.SendUserMsgReq
	SendUserMsgResp = pb.SendUserMsgResp

	Message interface {
		SendUserMsg(ctx context.Context, in *SendUserMsgReq, opts ...grpc.CallOption) (*SendUserMsgResp, error)
		SendRoomMsg(ctx context.Context, in *SendRoomMsgReq, opts ...grpc.CallOption) (*SendRoomMsgResp, error)
		PostMoments(ctx context.Context, in *PostMomentsReq, opts ...grpc.CallOption) (*PostMomentsResp, error)
	}

	defaultMessage struct {
		cli zrpc.Client
	}
)

func NewMessage(cli zrpc.Client) Message {
	return &defaultMessage{
		cli: cli,
	}
}

func (m *defaultMessage) SendUserMsg(ctx context.Context, in *SendUserMsgReq, opts ...grpc.CallOption) (*SendUserMsgResp, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.SendUserMsg(ctx, in, opts...)
}

func (m *defaultMessage) SendRoomMsg(ctx context.Context, in *SendRoomMsgReq, opts ...grpc.CallOption) (*SendRoomMsgResp, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.SendRoomMsg(ctx, in, opts...)
}

func (m *defaultMessage) PostMoments(ctx context.Context, in *PostMomentsReq, opts ...grpc.CallOption) (*PostMomentsResp, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.PostMoments(ctx, in, opts...)
}
