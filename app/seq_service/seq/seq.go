// Code generated by goctl. DO NOT EDIT!
// Source: seq.proto

package seq

import (
	"context"

	"github.com/wymli/bcsns/app/seq_service/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetSeqIdReq  = pb.GetSeqIdReq
	GetSeqIdResp = pb.GetSeqIdResp

	Seq interface {
		GetSeqId(ctx context.Context, in *GetSeqIdReq, opts ...grpc.CallOption) (*GetSeqIdResp, error)
	}

	defaultSeq struct {
		cli zrpc.Client
	}
)

func NewSeq(cli zrpc.Client) Seq {
	return &defaultSeq{
		cli: cli,
	}
}

func (m *defaultSeq) GetSeqId(ctx context.Context, in *GetSeqIdReq, opts ...grpc.CallOption) (*GetSeqIdResp, error) {
	client := pb.NewSeqClient(m.cli.Conn())
	return client.GetSeqId(ctx, in, opts...)
}
