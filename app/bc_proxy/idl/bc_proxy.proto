syntax = "proto3";

option go_package = "./pb";

package pb;

import "google/api/annotations.proto";

message OnChainUserMsgReq {
  string content_type = 1; // 内容类型
  int64 send_msg_id = 2;   // 用于服务端去重,客户端去重
  int64 server_msg_id = 3;
  uint64 send_user_id = 4;   // sender user id
  uint64 recv_user_id = 5;   // recver user id
  bytes data = 6;            // payload body
  optional bool is_test = 7; // 是否测试
}

message OnChainUserMsgResp {}

message OnChainRoomMsgReq {
  string content_type = 1; // 内容类型
  int64 send_msg_id = 2;   // 用于服务端去重,客户端去重
  int64 server_msg_id = 3;
  uint64 send_user_id = 4;   // sender user id
  uint64 room_id = 5;        // chat room id
  bytes data = 6;            // payload body
  optional bool is_test = 7; // 是否测试
}

message OnChainRoomMsgResp {}

message OnChainMomentsReq {
  string content_type = 1;   // 内容类型
  int64 send_moments_id = 2; // 用于服务端去重,客户端去重
  int64 server_moments_id = 3;
  uint64 user_id = 4;        // sender user id
  bytes data = 5;            // payload body
  optional bool is_test = 6; // 是否测试
}

message OnChainMomentsResp {}

message Msg {
  string content_type = 1; // 内容类型
  int64 server_msg_id = 3;
  uint64 send_user_id = 4; // sender user id
  uint64 recv_id = 5;      // recver user id or room id
  bytes data = 6;          // payload body
}

message PullRoomMsgReq {
  uint64 room_id = 1;
  int64 start_block = 2;
  int64 end_block = 3;
}

message PullRoomMsgResp { repeated Msg msg_list = 1; }

message PullUserMsgReq {
  uint64 from_uid = 1;
  uint64 recv_uid = 2;
  int64 start_block = 3;
  int64 end_block = 4;
}

message PullUserMsgResp { repeated Msg msg_list = 1; }

service bc_proxy {
  rpc OnChainUserMsg(OnChainUserMsgReq) returns (OnChainUserMsgResp);
  rpc OnChainRoomMsg(OnChainRoomMsgReq) returns (OnChainRoomMsgResp);
  rpc OnChainMoments(OnChainMomentsReq) returns (OnChainMomentsResp);

  rpc PullRoomMsg(PullRoomMsgReq) returns (PullRoomMsgResp) {
    option (google.api.http) = {
      get : "/api/v1/group/msg"
    };
  }

  rpc PullUserMsg(PullUserMsgReq) returns (PullUserMsgResp) {
    option (google.api.http) = {
      get : "/api/v1/user/msg"
    };
  }
}